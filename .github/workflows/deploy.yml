name: CI/CD using GitHub Actions & Docker

on:
  push:
    branches: ["master"]

permissions:
  contents: read

env:
  MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
  MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
  MYSQL_DB_URL: ${{ secrets.MYSQL_DB_URL }}
  REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
  REDIS_DB_URL: ${{ secrets.REDIS_DB_URL }}
  JWT_KEY: ${{ secrets.JWT_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set executable permissions
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Docker build
        run: |
          docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build -t server10img . # Dockerfile 경로 수정
          docker tag server10img ${{ secrets.DOCKERHUB_ID2 }}/server10img:latest
          docker push ${{ secrets.DOCKERHUB_ID2 }}/server10img:latest

      - name: Deploy with SSH
        if: github.ref == 'refs/heads/master'
        uses: appleboy/ssh-action@master

        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.PRIVATE_KEY }} 
          port: ${{ secrets.PORT }} 
          script: |
            # SSH 명령어로 서버에서 실행
            docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            docker stop server10Container || true
            docker rm server10Container || true
            docker rmi ${{ secrets.DOCKERHUB_ID2 }}/server10img:latest || true
            docker pull ${{ secrets.DOCKERHUB_ID2 }}/server10img:latest
            docker run -d -p 80:8080 --env-file ./server.env --name server10Container ${{ secrets.DOCKERHUB_ID2 }}/server10img:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
